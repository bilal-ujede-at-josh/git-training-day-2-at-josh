To combine two commits into a single commit in Git, you can use the git rebase command with the -i option.

Here's an example of how you might do this:

Check out the branch that contains the commits you want to combine.




Use the git rebase -i HEAD~2 command. This will open a text editor with a list of the last two commits on the branch.

In the text editor, change the word "pick" next to the commit you want to keep to "squash". This will cause Git to combine the commit with the previous commit.



Save and close the editor. Git will apply the rebase and combine the commits.




It's important to note that this operation can be somewhat risky, as it involves modifying the commit history of the branch. If you have already pushed the branch to a remote repository, other people may have based their work on the original commit history, and changing it could cause conflicts.


It's generally a good idea to use this feature with caution, and only when you are sure that it won't cause problems for other people working on the project.

