Q1. What is cherry-pick? Explain the use case of it also write steps to do it.

Cherry-picking means choosing a commit from one branch and applying it to 
another branch. It is mainly used if you don't want to merge the whole branch
and you want some of the commits.

Command:

git cherry-pick <commit-hash>

Commit hash is a unique identifier that is generated by Git.

Important usecases of Cherry-pick:

- If you by mistake make a commit in an incorrect branch, then using cherry-pick
  you can apply the required changes.
- When the same data structure is to be used by both the frontend and backend of
  a project. Then a developer can use cherry-pick to pick the commit and use it to
  his/her part of the project.
- In case of any bugs, it is critical to convey a fix to end clients as fast as could 
  be expected.

Steps:

Form the required repositories and branches.

Suppose we have 2 branches A and B. Both branch consists of some same and different feature 
and the last commit on both the branches contained some bugs. So we fix it on branch A
and now we have to do the same on the branch B, we can't merge both branches as their are
some branch specific features. So, we use git cherry-pick to pick the specified commit which 
contains the bug fixes.

git cherry-pick <commit-hash>

We can see the commit using the :

git log --oneline
